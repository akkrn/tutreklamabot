services:
  # PostgreSQL база данных
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${PG_NAME}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tutreklama_network

  # Redis для кеша и pub/sub
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - tutreklama_network

  # Django приложение
  web:
    build: .
    command: >
          sh -c "uv run python manage.py migrate &&
                 uv run python manage.py collectstatic --noinput &&
                 uv run python manage.py runserver 0.0.0.0:8000"
    user: root
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - logs_volume:/app/logs
      - sessions_volume:/app/userbot/sessions
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - tutreklama_network

  # Telegram бот
  bot:
    build: .
    command: uv run python manage.py tutreklama_runbot
    volumes:
      - logs_volume:/app/logs
      - sessions_volume:/app/userbot/sessions
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tutreklama_network

  # Менеджер юзерботов
  userbot-manager:
    build:
      context: .
      dockerfile: Dockerfile.userbot
    command: uv run python manage.py run_userbot
    user: root
    volumes:
      - logs_volume:/app/logs
      - sessions_volume:/app/userbot/sessions
    depends_on:
      web:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - tutreklama_network

  # Nginx reverse proxy (опционально)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - web
    networks:
      - tutreklama_network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:
  logs_volume:
  sessions_volume:

networks:
  tutreklama_network:
    driver: bridge
