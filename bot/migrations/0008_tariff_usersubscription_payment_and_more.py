# Generated by Django 5.2.7 on 2025-10-20 17:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("bot", "0007_alter_userbot_string_session"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tariff",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Например: Базовый, Премиум, VIP",
                        max_length=100,
                        verbose_name="Название тарифа",
                    ),
                ),
                (
                    "price",
                    models.PositiveIntegerField(
                        help_text="Цена в рублях", verbose_name="Цена в рублях"
                    ),
                ),
                (
                    "channels_limit",
                    models.PositiveIntegerField(
                        help_text="Максимальное количество каналов для отслеживания",
                        verbose_name="Лимит каналов",
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveIntegerField(
                        help_text="Сколько дней действует тариф (30, 90, 180 и т.д.)",
                        verbose_name="Длительность в днях",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Доступен ли тариф для покупки",
                        verbose_name="Активен",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Дополнительное описание тарифа",
                        verbose_name="Описание",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Тариф",
                "verbose_name_plural": "Тарифы",
                "ordering": ["price"],
            },
        ),
        migrations.CreateModel(
            name="UserSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Активна"),
                            ("expired", "Истекла"),
                            ("cancelled", "Отменена"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Статус подписки",
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата начала подписки"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        verbose_name="Дата окончания подписки"
                    ),
                ),
                (
                    "payment_id",
                    models.CharField(
                        blank=True,
                        help_text="Идентификатор платежа в платежной системе",
                        max_length=255,
                        verbose_name="ID платежа",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "tariff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_subscriptions",
                        to="bot.tariff",
                        verbose_name="Тариф",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="bot.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Подписка пользователя",
                "verbose_name_plural": "Подписки пользователей",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "robokassa_invoice_id",
                    models.CharField(
                        help_text="Уникальный идентификатор инвойса в системе Robokassa",
                        max_length=255,
                        unique=True,
                        verbose_name="ID инвойса Robokassa",
                    ),
                ),
                (
                    "robokassa_payment_id",
                    models.CharField(
                        blank=True,
                        help_text="Идентификатор платежа в Robokassa",
                        max_length=255,
                        verbose_name="ID платежа Robokassa",
                    ),
                ),
                (
                    "robokassa_recurring_id",
                    models.CharField(
                        blank=True,
                        help_text="Идентификатор рекурентного платежа в Robokassa",
                        max_length=255,
                        verbose_name="ID рекурентного платежа",
                    ),
                ),
                (
                    "amount",
                    models.PositiveIntegerField(
                        help_text="Сумма платежа в рублях",
                        verbose_name="Сумма в рублях",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает оплаты"),
                            ("success", "Успешно оплачен"),
                            ("failed", "Ошибка оплаты"),
                            ("cancelled", "Отменен"),
                            ("refunded", "Возвращен"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Статус платежа",
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("initial", "Первоначальный платеж"),
                            ("recurrent", "Рекурентный платеж"),
                        ],
                        default="initial",
                        max_length=20,
                        verbose_name="Тип платежа",
                    ),
                ),
                (
                    "payment_url",
                    models.URLField(
                        blank=True,
                        help_text="Ссылка для перехода к оплате",
                        verbose_name="URL для оплаты",
                    ),
                ),
                (
                    "payment_data",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Дополнительные данные платежа в JSON формате",
                        verbose_name="Данные платежа",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата обновления"
                    ),
                ),
                (
                    "paid_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Дата оплаты"
                    ),
                ),
                (
                    "previous_payment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Ссылка на предыдущий платеж для рекурентных платежей",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recurring_payments",
                        to="bot.payment",
                        verbose_name="Предыдущий платеж",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.user",
                        verbose_name="Пользователь",
                    ),
                ),
                (
                    "tariff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.tariff",
                        verbose_name="Тариф",
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.usersubscription",
                        verbose_name="Подписка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Платеж",
                "verbose_name_plural": "Платежи",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["user", "status"], name="bot_usersub_user_id_97bedb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="usersubscription",
            index=models.Index(
                fields=["expires_at"], name="bot_usersub_expires_b6c6e0_idx"
            ),
        ),
    ]
