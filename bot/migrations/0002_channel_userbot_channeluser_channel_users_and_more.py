# Generated by Django 5.2.6 on 2025-09-25 10:45

import django.db.models.deletion
import utils.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("bot", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Channel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("telegram_id", models.BigIntegerField(db_index=True, unique=True)),
                ("title", models.TextField()),
                ("main_username", models.TextField(blank=True, null=True)),
                ("link_subscription", models.TextField(blank=True, null=True)),
                ("is_private", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Канал",
                "verbose_name_plural": "Каналы",
            },
        ),
        migrations.CreateModel(
            name="UserBot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Название аккаунта для удобства", max_length=255
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Номер телефона аккаунта", max_length=32, unique=True
                    ),
                ),
                ("api_id", models.IntegerField()),
                ("api_hash", models.CharField(max_length=128)),
                (
                    "session_file",
                    models.CharField(
                        help_text="Путь к .session (Telethon)", max_length=255
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=False, help_text="Авторизован и готов к работе"
                    ),
                ),
                (
                    "max_channels",
                    models.IntegerField(
                        default=500, help_text="Максимум каналов для этого аккаунта"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Телеграм аккаунт",
                "verbose_name_plural": "Телеграм аккаунты",
            },
        ),
        migrations.CreateModel(
            name="ChannelUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="bot.channel"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="bot.user"
                    ),
                ),
            ],
            options={
                "verbose_name": "Канал пользователя",
                "verbose_name_plural": "Каналы пользователя",
                "unique_together": {("user", "channel")},
            },
        ),
        migrations.AddField(
            model_name="channel",
            name="users",
            field=models.ManyToManyField(
                blank=True,
                related_name="channels",
                through="bot.ChannelUser",
                to="bot.user",
            ),
        ),
        migrations.CreateModel(
            name="ChannelNews",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.BigIntegerField()),
                ("message", models.TextField(default="")),
                (
                    "short_message",
                    utils.models.TruncatingCharField(blank=True, max_length=51),
                ),
                ("url", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="news",
                        to="bot.channel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Сообщение из канала",
                "verbose_name_plural": "Сообщения из каналов",
                "indexes": [
                    models.Index(
                        fields=["channel"], name="bot_channel_channel_e0c7f4_idx"
                    ),
                    models.Index(
                        fields=["-created_at", "channel"],
                        name="bot_channel_created_dfdbb6_idx",
                    ),
                ],
                "unique_together": {("channel", "message_id")},
            },
        ),
        migrations.CreateModel(
            name="ChannelSubscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_subscribed",
                    models.BooleanField(
                        default=False, help_text="Успешно ли подписался"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="bot.channel",
                    ),
                ),
                (
                    "userbot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="channel_subscriptions",
                        to="bot.userbot",
                    ),
                ),
            ],
            options={
                "verbose_name": "Подписка юзербота",
                "verbose_name_plural": "Подписки юзерботов",
                "indexes": [
                    models.Index(
                        fields=["channel", "is_subscribed"],
                        name="bot_channel_channel_6da0f9_idx",
                    ),
                    models.Index(
                        fields=["userbot", "is_subscribed"],
                        name="bot_channel_userbot_1419ba_idx",
                    ),
                ],
                "unique_together": {("channel", "userbot")},
            },
        ),
    ]
