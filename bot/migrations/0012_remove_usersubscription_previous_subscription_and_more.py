# Generated by Django 5.2.7 on 2025-10-29 19:50

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("bot", "0011_remove_usersubscription_payment_id_and_more"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="usersubscription",
            name="previous_subscription",
        ),
        migrations.RemoveField(
            model_name="usersubscription",
            name="robokassa_invoice_id",
        ),
        migrations.AlterField(
            model_name="usersubscription",
            name="status",
            field=models.CharField(
                choices=[("active", "Активна"), ("expired", "Истекла")],
                default="active",
                max_length=20,
                verbose_name="Статус подписки",
            ),
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "robokassa_invoice_id",
                    models.BigIntegerField(
                        db_index=True,
                        help_text="Уникальный идентификатор инвойса в системе Robokassa",
                        unique=True,
                        verbose_name="ID инвойса Robokassa",
                    ),
                ),
                (
                    "amount",
                    models.PositiveIntegerField(
                        help_text="Сумма платежа в рублях",
                        verbose_name="Сумма платежа",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Ожидает оплаты"),
                            ("success", "Успешно оплачен"),
                            ("failed", "Ошибка оплаты"),
                            ("cancelled", "Отменен"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                        verbose_name="Статус платежа",
                    ),
                ),
                (
                    "message_id",
                    models.BigIntegerField(
                        blank=True,
                        help_text="ID сообщения для редактирования после оплаты",
                        null=True,
                        verbose_name="ID сообщения Telegram",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True,
                        help_text="Текст ошибки, если платеж не удался",
                        null=True,
                        verbose_name="Сообщение об ошибке",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Дата обновления"
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата успешной обработки платежа",
                        null=True,
                        verbose_name="Дата обработки",
                    ),
                ),
                (
                    "previous_payment",
                    models.ForeignKey(
                        blank=True,
                        help_text="Ссылка на предыдущий платеж для рекуррентных платежей",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="recurring_payments",
                        to="bot.payment",
                        verbose_name="Предыдущий платеж",
                    ),
                ),
                (
                    "subscription",
                    models.ForeignKey(
                        blank=True,
                        help_text="Подписка, созданная или продленная этим платежом",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.usersubscription",
                        verbose_name="Подписка",
                    ),
                ),
                (
                    "tariff",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.tariff",
                        verbose_name="Тариф",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="bot.user",
                        verbose_name="Пользователь",
                    ),
                ),
            ],
            options={
                "verbose_name": "Платеж",
                "verbose_name_plural": "Платежи",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "status"],
                        name="bot_payment_user_id_f61b7d_idx",
                    ),
                    models.Index(
                        fields=["robokassa_invoice_id"],
                        name="bot_payment_robokas_b1bd7c_idx",
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="bot_payment_status_6275a5_idx",
                    ),
                ],
            },
        ),
    ]
